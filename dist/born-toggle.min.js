"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _bornUtilities=require("@borngroup/born-utilities");function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}var Toggle=function(){function Toggle(options){_classCallCheck(this,Toggle);this.options=options||{};this.options.dataAttribute=this.options.dataAttribute||"data-toggle";_bornUtilities.callbackOnElements.call(this,this.options.triggers,this._setupTrigger);document.removeEventListener("keydown",this._toggleOnReturn);document.addEventListener("keydown",this._toggleOnReturn)}_createClass(Toggle,[{key:"_toggleOnReturn",value:function _toggleOnReturn(evt){var isNotFocusable=this.activeElement!==document.body&&this.activeElement.nodeName!=="BUTTON";if(this.activeElement.toggle&&evt.keyCode===13&&isNotFocusable){Toggle.toggleEventHandler.call(this.activeElement,evt)}}},{key:"_setupTrigger",value:function _setupTrigger(trigger){trigger.toggle=trigger.toggle||{};trigger.toggle.options=this._getOptions(trigger);trigger.toggle.parentEl=this._getParent(trigger);trigger.toggle.targetEl=this._getTarget(trigger);if(!trigger.toggle.targetEl){console.warn("No target provided or element not found for: ",trigger);return false}trigger.toggle.targetEl.toggleTrigger=trigger;this._setupCallbacks(trigger);this._setupMethods(trigger);this._setupHandlers(trigger);if(trigger.toggle.options.auto){if(!isNaN(trigger.toggle.options.auto)){window.setTimeout(Toggle.set.bind(this,trigger),trigger.toggle.options.auto)}else if(typeof trigger.toggle.options.auto==="string"){if((0,_bornUtilities.hasURLParameter)(trigger.toggle.options.auto)){Toggle.set(trigger)}else if(this.options.breakpoints){var matchedBreakpoint=this.options.breakpoints[trigger.toggle.options.auto];if(matchedBreakpoint&&(!matchedBreakpoint.min||document.body.offsetWidth>=matchedBreakpoint.min)&&(!matchedBreakpoint.max||document.body.offsetWidth<=matchedBreakpoint.max)){Toggle.set(trigger)}else{Toggle.unset(trigger)}}}else{Toggle.set(trigger)}}trigger.removeAttribute(this.options.dataAttribute)}},{key:"_getOptions",value:function _getOptions(trigger){var triggerOptions={};triggerOptions=trigger.getAttribute(this.options.dataAttribute)?JSON.parse(trigger.getAttribute(this.options.dataAttribute)):{};for(var option in this.options){if(option==="triggers"||option==="dataAttribute"){continue}if(!triggerOptions.hasOwnProperty(option)){triggerOptions[option]=this.options[option]}}triggerOptions.closeSelector=triggerOptions.closeSelector||"[data-toggle-close]";triggerOptions.activeClass=triggerOptions.activeClass||"toggle--active";triggerOptions.unsetSelf=triggerOptions.hasOwnProperty("unsetSelf")?triggerOptions.unsetSelf:true;return triggerOptions}},{key:"_getParent",value:function _getParent(trigger){return trigger.closest(trigger.toggle.options.parent)||document.querySelector(trigger.toggle.options.parent)||trigger.parentNode}},{key:"_getTarget",value:function _getTarget(trigger){var targetSelector=trigger.toggle.options.target,targetEl=document.querySelectorAll(targetSelector);return targetEl.length>1?trigger.toggle.parentEl.querySelector(targetSelector):targetEl[0]}},{key:"_setupCallbacks",value:function _setupCallbacks(trigger){trigger.toggle.beforeUnset=trigger.toggle.options.beforeUnset||function(){return true};trigger.toggle.afterUnset=trigger.toggle.options.afterUnset||function(){return true};trigger.toggle.beforeUnsetAll=trigger.toggle.options.beforeUnsetAll||function(){return true};trigger.toggle.beforeSet=trigger.toggle.options.beforeSet||function(){return true};trigger.toggle.afterSet=trigger.toggle.options.afterSet||function(){return true}}},{key:"_setupMethods",value:function _setupMethods(trigger){trigger.toggle.toggle=Toggle.toggle.bind(this,trigger);trigger.toggle.set=Toggle.set.bind(this,trigger);trigger.toggle.unset=Toggle.unset.bind(this,trigger)}},{key:"_setupHandlers",value:function _setupHandlers(trigger){var evtType=(trigger.toggle.options.event||"click").split(" ");evtType.forEach(function(currentEvt){trigger.addEventListener(currentEvt,Toggle.toggleEventHandler)}.bind(this))}}],[{key:"toggleEventHandler",value:function toggleEventHandler(evt){var isTouch=evt.type.indexOf("touch")!==-1;if(this.nodeName==="A"||isTouch){evt.preventDefault()}Toggle.toggle(this,evt);if(isTouch){evt.stopImmediatePropagation()}}},{key:"toggle",value:function toggle(trigger,evt){var evtType=evt?evt.type:"";if(trigger.classList.contains(trigger.toggle.options.activeClass)){if(trigger.toggle.options.unsetSelf&&evtType!=="mouseenter"){Toggle.unset(trigger,evt)}}else{Toggle.set(trigger,evt,evtType)}}},{key:"unset",value:function unset(trigger){if(trigger.classList.contains(trigger.toggle.options.activeClass)&&trigger.toggle.beforeUnset(trigger)){trigger.classList.remove(trigger.toggle.options.activeClass);trigger.toggle.parentEl.classList.remove(trigger.toggle.options.activeClass);trigger.toggle.targetEl.classList.remove(trigger.toggle.options.activeClass);trigger.toggle.targetEl.removeEventListener("click",Toggle.closeElCallback);trigger.toggle.afterUnset(trigger)}}},{key:"set",value:function set(trigger,evt,evtType){var triggerEvt=evtType||"";if(trigger.toggle.beforeSet(trigger,evt)){if(trigger.toggle.beforeUnsetAll(trigger)){Toggle.unsetAll(trigger,trigger.toggle.options.siblingSelector)}trigger.classList.add(trigger.toggle.options.activeClass);trigger.toggle.parentEl.classList.add(trigger.toggle.options.activeClass);trigger.toggle.targetEl.classList.add(trigger.toggle.options.activeClass);if(!trigger.toggle.options.persist){var bodyEvtType=triggerEvt.indexOf("touch")>=0?triggerEvt:"click",blurCallback=function blurCallback(evt){if(!trigger.toggle.targetEl.contains(evt.target)&&!trigger.toggle.parentEl.contains(evt.target)&&evt.target!==trigger){this.removeEventListener(bodyEvtType,blurCallback,true);Toggle.unset(trigger)}};document.body.addEventListener(bodyEvtType,blurCallback,true)}if(trigger.toggle.options.unsetOnHoverOut){var mouseLeaveCallback=function mouseLeaveCallback(){this.removeEventListener("mouseleave",mouseLeaveCallback);Toggle.unset(trigger)};trigger.toggle.parentEl.addEventListener("mouseleave",mouseLeaveCallback)}if(trigger.toggle.options.timeout){window.setTimeout(Toggle.unset.bind(this,trigger),trigger.toggle.options.timeout)}trigger.toggle.targetEl.addEventListener("click",Toggle.closeElCallback);trigger.toggle.afterSet(trigger)}}},{key:"closeElCallback",value:function closeElCallback(evt){var targetCloseEl=evt.target.closest(this.toggleTrigger.toggle.options.closeSelector),targetTriggerSelector=targetCloseEl&&targetCloseEl.getAttribute("data-toggle-close")?targetCloseEl.getAttribute("data-toggle-close"):null;if(targetCloseEl&&(this.toggleTrigger.matches(targetTriggerSelector)||!targetTriggerSelector)){Toggle.unset(this.toggleTrigger)}}},{key:"unsetAll",value:function unsetAll(refTrigger){var activeClass=refTrigger.toggle.options.activeClass,siblingSelector=refTrigger.toggle.options.siblingSelector,skipSelector=refTrigger.toggle.options.skipSelector,activeTriggers=document.querySelectorAll("."+activeClass);[].forEach.call(activeTriggers,function(trigger){if(trigger.toggle&&!trigger.matches(skipSelector)&&(!trigger.toggle.options.persist||trigger.matches(siblingSelector))){Toggle.unset(trigger)}})}}]);return Toggle}();exports.default=Toggle;